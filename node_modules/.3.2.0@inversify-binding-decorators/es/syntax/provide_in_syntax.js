import ProvideWhenOnSyntax from "./provide_when_on_syntax";
import ProvideWhenSyntax from "./provide_when_syntax";
import ProvideOnSyntax from "./provide_on_syntax";
import ProvideDoneSyntax from "./provide_done_syntax";
var ProvideInSyntax = /** @class */ (function () {
    function ProvideInSyntax(bindingInSyntax, provideDoneSyntax) {
        this._bindingInSyntax = bindingInSyntax;
        this._provideDoneSyntax = provideDoneSyntax;
    }
    ProvideInSyntax.prototype.inSingletonScope = function () {
        var bindingWhenOnSyntax = this._bindingInSyntax.inSingletonScope();
        var provideWhenSyntax = new ProvideWhenSyntax(bindingWhenOnSyntax, this._provideDoneSyntax);
        var provideOnSyntax = new ProvideOnSyntax(bindingWhenOnSyntax, this._provideDoneSyntax);
        return new ProvideWhenOnSyntax(provideWhenSyntax, provideOnSyntax);
    };
    ProvideInSyntax.prototype.inTransientScope = function () {
        var bindingWhenOnSyntax = this._bindingInSyntax.inTransientScope();
        var provideWhenSyntax = new ProvideWhenSyntax(bindingWhenOnSyntax, this._provideDoneSyntax);
        var provideOnSyntax = new ProvideOnSyntax(bindingWhenOnSyntax, this._provideDoneSyntax);
        return new ProvideWhenOnSyntax(provideWhenSyntax, provideOnSyntax);
    };
    ProvideInSyntax.prototype.done = function (force) {
        var binding = this._bindingInSyntax._binding;
        var provideDoneSyntax = new ProvideDoneSyntax(binding);
        return provideDoneSyntax.done(force);
    };
    return ProvideInSyntax;
}());
export default ProvideInSyntax;
