import ProvideInWhenOnSyntax from "../syntax/provide_in_when_on_syntax";
import ProvideWhenSyntax from "../syntax/provide_when_syntax";
import ProvideOnSyntax from "../syntax/provide_on_syntax";
import ProvideInSyntax from "../syntax/provide_in_syntax";
import ProvideDoneSyntax from "../syntax/provide_done_syntax";
function fluentProvide(container) {
    // function is named for testing
    return function _fluentProvide(serviceIdentifier) {
        var bindingWhenOnSyntax = container.bind(serviceIdentifier).to(null);
        var binding = bindingWhenOnSyntax._binding;
        var provideDoneSyntax = new ProvideDoneSyntax(binding);
        var provideInWhenOnSyntax = new ProvideInWhenOnSyntax(new ProvideInSyntax(bindingWhenOnSyntax, provideDoneSyntax), new ProvideWhenSyntax(bindingWhenOnSyntax, provideDoneSyntax), new ProvideOnSyntax(bindingWhenOnSyntax, provideDoneSyntax));
        return provideInWhenOnSyntax;
    };
}
export default fluentProvide;
